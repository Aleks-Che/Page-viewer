import javax.swing.*;
import java.awt.*;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;

public class Main {
    public static void main(String[] args) {
        GUI gui = new GUI();
        gui.createForm();
    }


    {
// GUI initializer generated by IntelliJ IDEA GUI Designer
// >>> IMPORTANT!! <<<
// DO NOT EDIT OR ADD ANY CODE HERE!
        $$$setupUI$$$();
    }

    /**
     * Method generated by IntelliJ IDEA GUI Designer
     * >>> IMPORTANT!! <<<
     * DO NOT edit this method OR call it in your code!
     *
     * @noinspection ALL
     */
    private void $$$setupUI$$$() {
        final JPanel panel1 = new JPanel();
        panel1.setLayout(new com.intellij.uiDesigner.core.GridLayoutManager(1, 1, new Insets(0, 0, 0, 0), -1, -1));
    }

    static class GUI {
        Actions actions = new Actions();
        JFrame jFrame = new JFrame("Page viewer");
        JPanel jPanelUrl = new JPanel();
        JTextField jTextFieldUrl = new JTextField(15);
        JLabel jLabelUrl = new JLabel("Input URL");
        JLabel jLabelStatusTor = new JLabel("TOR PROCESS OFFLINE");
        JPanel jPanelTime = new JPanel();
        JTextField jTextFieldStartTime = new JTextField(5);
        JTextField jTextFieldStopTime = new JTextField(5);
        JButton buttonStop = new JButton("Stop");
        JButton buttonStart = new JButton("Start");
        JPanel jPanelLoginAndPass = new JPanel();
        JTextField jTextFieldLogin = new JTextField(10);
        JPasswordField jPasswordField = new JPasswordField(10);
        JPanel jPanelButtonTop = new JPanel();
        JPanel jPanelButton = new JPanel();
        JButton onTor = new JButton("on TOP");
        JButton offTor = new JButton("off TOP");

        public void setjLabelStatusTor(JLabel jLabelStatusTor) {
            this.jLabelStatusTor = jLabelStatusTor;
        }

        public JTextField getjTextFieldStartTime() {
            return jTextFieldStartTime;
        }

        public JTextField getjTextFieldStopTime() {
            return jTextFieldStopTime;
        }

        public JTextField getjTextFieldLogin() {
            return jTextFieldLogin;
        }

        public JPasswordField getjPasswordField() {
            return jPasswordField;
        }

        public JTextField getTextField() {
            jTextFieldUrl.getText();
            return this.jTextFieldUrl;
        }

        public void createForm() {
            jFrame.setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);
            jFrame.setSize(400, 300);
            jFrame.setLocationRelativeTo(null);
            jFrame.setLayout(new FlowLayout());
            jTextFieldUrl.setText("https://diletant.media/");
            jPanelUrl.add(jTextFieldUrl);
            jPanelUrl.add(jLabelUrl);
            jPanelLoginAndPass.add(jLabelStatusTor);
            if (actions.checkTorService()) {
                jLabelStatusTor.setText("TOR IS ON");
            } else jLabelStatusTor.setText("TOR IS OFF");
            jTextFieldStartTime.setText("3");
            jTextFieldStopTime.setText("6");
            jPanelTime.add(jTextFieldStartTime);
            jPanelTime.add(jTextFieldStopTime);

            buttonStart.setBackground(Color.green);
            buttonStart.addActionListener(new ActionListener() {
                @Override
                public void actionPerformed(ActionEvent e) {
                    System.out.println("START");
                    actions.goToURL(jTextFieldUrl.getText(),
                            Integer.parseInt(jTextFieldStartTime.getText()),
                            Integer.parseInt(jTextFieldStopTime.getText()));
                    System.out.println(getTextField().getText());
                }
            });
            jPanelButton.add(buttonStart);
            buttonStop.setBackground(Color.red);
            buttonStop.addActionListener(new ActionListener() {
                @Override
                public void actionPerformed(ActionEvent e) {
                    System.out.println("STOP");
                }
            });
            jPanelButton.add(buttonStop);

            jTextFieldLogin.setText("Login");
            jPasswordField.setText("password");
            jPanelLoginAndPass.add(jTextFieldLogin);

            jPanelLoginAndPass.add(jPasswordField);
            onTor.addActionListener(new ActionListener() {
                @Override
                public void actionPerformed(ActionEvent e) {
                    if (actions.installTorService()) {
                        jLabelStatusTor.setText("TOR SERVICE IS ON");
                    } else jLabelStatusTor.setText("TOR SERVICE IS OFF");
                }
            });

            offTor.addActionListener(new ActionListener() {
                @Override
                public void actionPerformed(ActionEvent e) {
                    if (actions.deleteTorService()) {
                        jLabelStatusTor.setText("TOR SERVICE IS ON");
                    } else jLabelStatusTor.setText("TOR SERVICE IS OFF");
                }
            });
            jPanelButton.add(onTor);
            jPanelButton.add(offTor);


            jFrame.add(jPanelUrl);
            jFrame.add(jPanelTime);
            jFrame.add(jPanelButton);
            jFrame.add(jPanelLoginAndPass);
            jFrame.add(jPanelButtonTop);
            jFrame.setVisible(true);


        }
    }
}
